Openai response for hey Jarvis use AI to write a Python program to send emails using Gmail
*************************************************************************

You can use Python to send emails using Gmail through the `smtplib` library. Below is a simple program that demonstrates how to do this. Make sure you have the required libraries installed and that you follow the necessary security steps.

### Prerequisites
1. **Google Account Security**: If you are using a Google account, you may need to enable "Less secure app access" for the account you are sending the email from, or set up an App Password if you have 2-Step Verification enabled. **Note**: Google is increasingly restricting access through less secure apps, so using OAuth2 is recommended for production applications.
  
2. **Python Installation**: Make sure you have Python installed on your system.

### Sample Python Program

Here's a simple example of sending an email through Gmail using Python:

```python
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

def send_email(sender_email, sender_password, receiver_email, subject, body):
    # Create the email header
    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject

    # Attach the email body
    msg.attach(MIMEText(body, 'plain'))

    try:
        # Set up the server
        server = smtplib.SMTP('smtp.gmail.com', 587)
        server.starttls()  # Upgrade the connection to a secure encrypted SSL/TLS

        # Log in to your account
        server.login(sender_email, sender_password)

        # Send the email
        server.send_message(msg)
        print("Email sent successfully!")

    except Exception as e:
        print(f"Failed to send email: {e}")

    finally:
        # Terminate the SMTP session
        server.quit()

if __name__ == "__main__":
    # Sender's email credentials
    sender_email = "your_email@gmail.com"
    sender_password = "your_password"  # Consider using an App Password for better security

    # Receiver's email and email content
    receiver_email = "receiver_email@example.com"
    subject = "Test Email"
    body = "This is a test email sent from Python!"

    # Send the email
    send_email(sender_email, sender_password, receiver_email, subject, body)
```

### Important Notes:
- **Security**: It is not recommended to hard-code your email credentials directly in the code. Consider using environment variables or a more secure method to manage your credentials.
  
- **Less Secure Apps**: As mentioned, you might need to enable this feature in your Google account settings in order to be able to send emails.

- **Wiring**: If you are using this script frequently, consider using OAuth 2.0 for better security practices.

### Testing
Make sure to test the script with a small email to ensure everything is configured correctly. You should see the message "Email sent successfully!" in your console if everything works as expected.